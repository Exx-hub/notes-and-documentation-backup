Nov 5, 2022

MERN-TS-RTK

mern-soccer arturo villa


1. create client and server dir
2. go to server dir and initialize package.json => npm init --y

3. install dependencies => 
- npm i express mongoose jsonwebtoken bcrypt cors
- npm i express-validator dotenv

and then typescript
- npm i typescript

--- dev dependencies
 
=> npm i -D nodemon
=> npm i -D ts-node ts-node-dev

5. in tsconfig, uncomment moduleResolution: node and outDir: "./build"
--- i think rootDir too

6. configure scripts in package.json
    "start": "node ./build/app.js",
    "dev": "ts-node-dev app.ts",
    "build": "tsc -p"

7. install types for node and express and cors and others
=> npm i -D @types/express @types/node
=> npm i --save-dev @types/cors


8. start building out the app.ts (server file) --- starting with imports..

-- this app is different
-instead of running all from app.js or server.js, app.js is exported and everything is run from index.ts including dbconnection


9. once everything is initialized and test route working,
-create models, routes and controllers folders


10. create the models that you will need first
- create Game Schema in models with Game interface since using TS
-create basic routing for Game
- create basic controller functions, just make them work. add the other stuff later like validation and try catch


11. fix the folder structure, create src folder and put all models,controllers, routes, app.ts and index.ts inside src

12. test routes -- done with basic server can move to frontend for now...



SIDENOTES:

*side note TS postfix or exclamation point after variable

    // process.env variable is string or undefined
    // mongoose connect does not accept this, but only accepts string
    // so you add a postfix ! , tells TS that you know for sure this is not undefined.
    // postfix or exclamation point after
    // In TypeScript, a postfix ! removes null and undefined from the type of an expression.
    // This is useful when you know, for reasons outside TypeScript's inference ability, that a 
    // variable that "could" be null or undefined actually isn't.
    
** nullish coalescing operator

//nullish coalescing operator in js

Expression:
	Left ?? Right
if left is null or undefined , then Right will be the value

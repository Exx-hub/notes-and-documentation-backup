September 8 , 2022

Dave Gray Mern Stack - TechNotes App


1. building the server / backend

- install express
- install nodemon as dev dependency
- create gitignore and add node modules
- configure package.json
  - main => server.js
  -scripts => start and dev => node server and nodemon server
  
- create server.js and initialize express server
- serve static files
- create public folder and style.css file
- create root folder and root route using express router
  - initialize express router and export
  -create root route and serve index.html
  
// '/' at the beginning and ends with index and .html optional
// sendfile => join dirname with up one folder out of routes, go into views folder, and find index.html there
router.get("^/$|/index(.html)?", (req, res) => {
  res.sendFile(path.join(__dirname, "..", "views", "index.html"));
});


--create catch all route for unmatched requests , in server.js

// catch all route that do not match or not routed properly / 404 page
app.all("*", (req, res) => {
  res.status(404);
  if (req.accepts("html")) {
    res.sendFile(path.join(__dirname, "views", "404.html"));
  } else if (req.accepts("json")) {
    res.json({ message: "404 Not Found!" });
  } else {
    res.type("txt").send("404 Not Found!");
  }
});



2. Adding MiddleWares
  - one or more functions that are placed in the path of requests, that are received by our backend api.
  - it has access to the request and response object. need to invoke the next function to proceed.
  - adds additional functionality to the api, and preliminary request processing
  
  
  three types: built-in, custom and third party middlewares


-- build in middleware => express.json() express.static()
-- custom middle ware => logger
-- custom error handler middleware

-- CORS middleware setup -- first line of security 

-- configuring cors to only give access to origins we want to give access to.


3. integrating MongoDb Database
-npm i dotenv => allows the use of enviroment variables inside our rest api
-create new database in mongodb and get uri to use in server
-install mongoose for easier use of mongodb
- create user and note schemas
- install mongoose-sequence for ticket numbers

-create dbConn.js in config folder and do the mongoose connection logic here, just separating logic here nothing fancy
-setup mongodb connection same way as before



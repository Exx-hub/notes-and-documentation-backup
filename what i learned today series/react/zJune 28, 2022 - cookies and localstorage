June 28, 2022


LocalStorage vs Cookies

-both are used to store and read data.

cookies - can be accessed in the browser and server can also access them.

local storage - only accessed client side


-4kb size only for cookies and 5mb for localstorage

-use cookies for small size data and local storage for bigger size

-cookies are small because they are sent on every request.

--local storage doesnt automatically expire while cookies have a set expiration time.

-sessionStorage are deleted when the tab closes. that's why it's called "session"



1. redux state is the most "reactive" one. It's aim is to let components within your app to have access to the "single source of truth". It stores data directly in JS, in memory. It can be quickly accessed and updated by your components, without any medium (like local storage), that's why it's handy for it's purposes.

2. local storage indeed is capable in storing data in your browser forever. However, reading from it and writing to it takes extra time and burden in order to keep data sync, because you can't interact with it synchronously, it's not the best choice for using as primary data source for your component. But it's good to hydrating some data on app inits (for example, you can store the JWT token there, and then hydrate it into the redux store in app load - it's a common pattern)

3. Cookies is not a good place to store the info in broad sense. It's rather a placeholder for storing some session-specific identifiers for communicating them to your backend. Check out this one for more info: https://medium.com/datadriveninvestor/cookies-vs-local-storage-2f3732c7d977#:~:text=Differences%20between%20cookies%20and%20localStorage&text=Cookies%20are%20mainly%20for%20reading,you%20more%20to%20work%20with.




Differences between cookies and localStorage
Cookies and local storage serve different purposes. Cookies are mainly for reading server-side, whereas local storage can only be read by the client-side. Apart from saving data, a big technical difference is the size of data you can store, and as I mentioned earlier localStorage gives you more to work with. In conclusion, the question when dealing with the two, one should ask is, in your application 

who *****needs this data- the client or the server?****



--example and tutorial on saving login creds in session / local storage
https://www.digitalocean.com/community/tutorials/how-to-add-login-authentication-to-react-applications



e.stopPropagation prevents click being registered as a click on the container div as well.

--example is onclick listeners both on an image and also on the container of the div.
--stop propagation determines click on the outside of the image and click on the image. 
--makes the click on the image different even tho it is in the same div

You also need to stop the propagation so that clicking the image doesnâ€™t register as a click on the background.



June 2, 2022


NEXT API ROUTES

// You should not fetch an API Route from getStaticProps or getStaticPaths . 
// Instead, write your server-side code directly in getStaticProps or getStaticPaths (or call a helper function). 
// Here's why: getStaticProps and getStaticPaths run only on the server-side 
// and will never run on the client-side.


why?

because getStaticProps or getServerSideProps is already serverside code. it doesnt make sense to
fetch data from your api routes, it doubles the work, redundant, when you can do serverside code on getStaticProps / GSSP

--just get data that you would get from your api route, like a list of users, which the api route gets from the database,
just get the data manually from getStaticProps. it's the same thing. calling your api route in getStaticProps
add an extra step which would result in the same thing.


---when importing functions or dependencies that are server-side or only used in server-side, nextjs will not include
these imports in the client side bundle. 


fs module not found error:


from this:

/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
}

module.exports = nextConfig



add changes to nextConfig in next.config.js--- to this:

/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  webpack5: true,
  webpack: (config) => {
    config.resolve.fallback = { fs: false };

    return config;
  },
};

module.exports = nextConfig;


Dynamic API routes***

CATCH-all dynamic api routes


***need more practice and real examples of using api routes with nextJS

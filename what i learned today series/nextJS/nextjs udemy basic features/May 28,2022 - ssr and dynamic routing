May 28,2022


UDEMY NEXT JS
***notes today are written as comments in the project files***


topic - dynamic routing. getStaticPaths? and ssr - getServerSideProps


-dynamic routing with ssg/ssr
-getStaticPaths flow.

-fallback key
-notFound property

-Link component pre-fetches data

-getServerSideProps (SSR)


-client side data-fecthing... like in react or useEffect. nextjs uses useSWR for this
 ---used for data that changes often like stocks data
 ---highly user-specific data like order history of a user
 ---partial data like likes followage views





FIREBASE -
use as database

-create database, add keys and properties
-https://nextjs-course-85a4e-default-rtdb.firebaseio.com/ - base url

https://nextjs-course-85a4e-default-rtdb.firebaseio.com/sales.json --- add property name and .json to access dbs


USESWR - 
// first argumanet to useSWR is a unique key for the fetch request
// by default it is passed to the fetcher function. you can add key parameter to fetcher function
// and console log to see that it is passed to fetcher
// able to do normal javascript in the fetcher function to modify the fetched data
// useSWR returns data,error,isValidating(loading), etc


COMBINING CLIENTSIDE DATA FETCHING AND PRE-FETCHING

// since you are pre-generating data and also revalidating data using client side fetching,
// you dont need loading ternary because there will be data displayed immediately
// setting props from getStaticProps as initial state will immediately display data
// then when component mounts, useEffect will run to fetch data again, to revalidate pre-fetched data
// to check if anything changed. to fetch the latest data



JAVASCRIPT-

if you need to get an item and still return as an array, use filter.
if you need the value whether object or primitive itself, use find.

for in loop. iterates over an object. 


  for (let key in data) {
        transformedSales.push({
          id: key,
          username: data[key].username,
          volume: data[key].volume,
        });
      }
      
key is a user defined variable for each keys or property names of an object.





















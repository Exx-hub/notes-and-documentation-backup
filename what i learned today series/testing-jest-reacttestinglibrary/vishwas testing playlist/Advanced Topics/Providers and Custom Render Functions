11/7/22

PROVIDERS

--testing with provder wrapped components
-- for this example themProvider from material ui was used, but can also be used with other providers like rtk provider


test("renders text correctly", () => {
    render(<MuiMode />, {
      wrapper: AppProviders,
    });

    const typographyH1 = screen.getByRole("heading", { level: 1 });
    expect(typographyH1).toHaveTextContent("dark mode");
  });
  
  
add the Provider used as wrapper property as an Object 2nd argument of render function


===
Custom Render Function
- can be used to include wrapper component to all test if needed. like a global store or theme that is wrapped on the whole app.


--- much clearer to go back to the docs for this:

https://testing-library.com/docs/react-testing-library/setup



import { ReactElement } from "react";
import { render, RenderOptions } from "@testing-library/react";
import { AppProviders } from "./providers/AppProviders";

==============================
test-utils.js

const customRender = (
  ui: ReactElement,
  options?: Omit<RenderOptions, "wrapper">
) => render(ui, { wrapper: AppProviders, ...options });

export * from "@testing-library/react";
export { customRender };

===================================================

import { render, screen } from "@testing-library/react";
import { AppProviders } from "../../providers/AppProviders";
import { customRender, screen as customScreen } from "../../test-utils";
import { MuiMode } from "./MuiMode";

describe("MuiMode", () => {
  test("renders text correctly", () => {
    render(<MuiMode />, {
      wrapper: AppProviders,
    });

    const typographyH1 = screen.getByRole("heading", { level: 1 });
    expect(typographyH1).toHaveTextContent("dark mode");
  });

  test("renders text correctly", () => {
    customRender(<MuiMode />);

    const typographyH1 = customScreen.getByRole("heading", { level: 1 });
    expect(typographyH1).toHaveTextContent("dark mode");
  });
});
=====================================================================

render is customized and wrapper is attached to it automatically. screen as well is re-exported.

-- can use just render and screen if using for all. but i instead renamed them as customRender and customScreen for clarity

















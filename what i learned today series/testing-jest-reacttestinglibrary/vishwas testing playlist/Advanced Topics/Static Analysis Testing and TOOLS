11/8/22

Static Analysis Testing

-process of verifying that your code meets certain expectations without actually running the code

-ensure consitent style and formatting
-check for common mistakes and possible bugs
-limit complexity of code 
-verify type consistency


** all types of test run the code and compare outcome against known expected outputs to see if everything works ok


---- while static testing analyzes aspects such as readability, consitency, error handling, type checking and best practices
---- it is not primarily concerned with the expected output but with how the code is writeen


TESTING => checks if the code works or not
Static => checks if code is written well


Static testing tools:

TS
ESLint
Prettier
Husky
lint-staged


links below if you need to review tools in the future:

1. TS 


2. ESLint
-tool for identifying and reporting on patters found in ECMAScript code, with goal of making code more consistent and bug free
-CRA by default installs eslint in the project
- just install the esling vscode extension

https://www.youtube.com/watch?v=AiIpVmmU3Vg&list=PLC3y8-rFHvwirqe1KHFCHJ0RqNuN61SJd&index=49


3. Prettier
-opinionated code formatter that ensures that all outputted code conforms to a consistent style

https://www.youtube.com/watch?v=rHcR-YuZ0I4&list=PLC3y8-rFHvwirqe1KHFCHJ0RqNuN61SJd&index=50

4. Husky
- tool that helps improve your commits and more.

https://www.youtube.com/watch?v=smR351T-roc&list=PLC3y8-rFHvwirqe1KHFCHJ0RqNuN61SJd&index=51

5. lint-staged
-runs linters and formatters against staged git files

https://www.youtube.com/watch?v=36VhpIIlerQ&list=PLC3y8-rFHvwirqe1KHFCHJ0RqNuN61SJd&index=52

